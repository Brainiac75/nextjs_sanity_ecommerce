"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/stripe";
exports.ids = ["pages/api/stripe"];
exports.modules = {

/***/ "stripe":
/*!*************************!*\
  !*** external "stripe" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stripe");

/***/ }),

/***/ "(api)/./pages/api/stripe.js":
/*!*****************************!*\
  !*** ./pages/api/stripe.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var stripe__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! stripe */ \"stripe\");\n/* harmony import */ var stripe__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(stripe__WEBPACK_IMPORTED_MODULE_0__);\n\nconst stripe = new (stripe__WEBPACK_IMPORTED_MODULE_0___default())(\"sk_test_51Lsay6FUlCOkdHusnwkxJvnzyezPhPplwGXTHYDIw4tp4BX6GlVgUFOw7r7i0VlU8VwiBbIL2MLbFhlfeXQb4iRb00hDa0zLLr\");\nasync function handler(req, res) {\n    // const invoice = await stripe.invoices.sendInvoice('id');\n    if (req.method === 'POST') {\n        console.log(req.body);\n        try {\n            const params = {\n                submit_type: 'pay',\n                mode: 'payment',\n                payment_method_types: [\n                    'card',\n                    'alipay',\n                    'us_bank_account'\n                ],\n                billing_address_collection: 'auto',\n                shipping_options: [\n                    {\n                        shipping_rate: 'shr_1LsbaaFUlCOkdHusiD0PyJ0C'\n                    },\n                    {\n                        shipping_rate: 'shr_1LsbdfFUlCOkdHusSmCPizNQ'\n                    }\n                ],\n                line_items: req.body.map((item)=>{\n                    const img = item.image[0].asset._ref;\n                    const newImage = img.replace('image-', 'https://cdn.sanity.io/images/s2kr8sqn/production/').replace('-webp', '.webp');\n                    console.log('IMAGE', newImage);\n                    return {\n                        price_data: {\n                            currency: 'usd',\n                            product_data: {\n                                name: item.name,\n                                images: [\n                                    newImage\n                                ]\n                            },\n                            unit_amount: item.price * 100\n                        },\n                        adjustable_quantity: {\n                            enabled: true,\n                            minimum: 1,\n                            maximum: 9999\n                        },\n                        quantity: item.quantity\n                    };\n                }),\n                success_url: `${req.headers.origin}/success`,\n                cancel_url: `${req.headers.origin}/?canceled=true`\n            };\n            // Create Checkout Sessions from body params.\n            const session = await stripe.checkout.sessions.create(params);\n            res.status(200).json(session);\n        } catch (err) {\n            res.status(err.statusCode || 500).json(err.message);\n        }\n    } else {\n        res.setHeader('Allow', 'POST');\n        res.status(405).end('Method Not Allowed');\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Q0FBQ3lDLE1BQU0sQ0FBQyxHQUFHLEVBQUVNLEdBQUcsQ0FBQyxDQUFvQjtJQUM1QyxDQUFDO0FBQ0wsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Vjb21tZXJjZS1zaXRlLy4vcGFnZXMvYXBpL3N0cmlwZS5qcz9kNzg4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBTdHJpcGUgZnJvbSAnc3RyaXBlJztcblxuY29uc3Qgc3RyaXBlID0gbmV3IFN0cmlwZShwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVFJJUEVfU0VDUkVUX0tFWSk7XG5cblxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gaGFuZGxlcihyZXEsIHJlcykge1xuICAgIC8vIGNvbnN0IGludm9pY2UgPSBhd2FpdCBzdHJpcGUuaW52b2ljZXMuc2VuZEludm9pY2UoJ2lkJyk7XG4gICAgaWYgKHJlcS5tZXRob2QgPT09ICdQT1NUJykge1xuICAgICAgICBjb25zb2xlLmxvZyhyZXEuYm9keSlcblxuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgcGFyYW1zID0ge1xuICAgICAgICAgICAgICAgIHN1Ym1pdF90eXBlOiAncGF5JyxcbiAgICAgICAgICAgICAgICBtb2RlOiAncGF5bWVudCcsXG4gICAgICAgICAgICAgICAgcGF5bWVudF9tZXRob2RfdHlwZXM6IFsnY2FyZCcsICdhbGlwYXknLCAndXNfYmFua19hY2NvdW50J10sXG4gICAgICAgICAgICAgICAgYmlsbGluZ19hZGRyZXNzX2NvbGxlY3Rpb246ICdhdXRvJyxcbiAgICAgICAgICAgICAgICBzaGlwcGluZ19vcHRpb25zOiBbXG4gICAgICAgICAgICAgICAgICAgIHsgc2hpcHBpbmdfcmF0ZTogJ3Nocl8xTHNiYWFGVWxDT2tkSHVzaUQwUHlKMEMnIH0sXG4gICAgICAgICAgICAgICAgICAgIHsgc2hpcHBpbmdfcmF0ZTogJ3Nocl8xTHNiZGZGVWxDT2tkSHVzU21DUGl6TlEnIH1cbiAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgIGxpbmVfaXRlbXM6IHJlcS5ib2R5Lm1hcCgoaXRlbSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBpbWcgPSBpdGVtLmltYWdlWzBdLmFzc2V0Ll9yZWY7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IG5ld0ltYWdlID0gaW1nLnJlcGxhY2UoJ2ltYWdlLScsICdodHRwczovL2Nkbi5zYW5pdHkuaW8vaW1hZ2VzL3Mya3I4c3FuL3Byb2R1Y3Rpb24vJykucmVwbGFjZSgnLXdlYnAnLCAnLndlYnAnKTtcblxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnSU1BR0UnLCBuZXdJbWFnZSlcblxuICAgICAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgcHJpY2VfZGF0YToge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbmN5OiAndXNkJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcm9kdWN0X2RhdGE6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogaXRlbS5uYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbWFnZXM6IFtuZXdJbWFnZV0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1bml0X2Ftb3VudDogaXRlbS5wcmljZSAqIDEwMCxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBhZGp1c3RhYmxlX3F1YW50aXR5OiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZW5hYmxlZDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtaW5pbXVtOiAxLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1heGltdW06IDk5OTksXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgcXVhbnRpdHk6IGl0ZW0ucXVhbnRpdHlcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgIHN1Y2Nlc3NfdXJsOiBgJHtyZXEuaGVhZGVycy5vcmlnaW59L3N1Y2Nlc3NgLFxuICAgICAgICAgICAgICAgIGNhbmNlbF91cmw6IGAke3JlcS5oZWFkZXJzLm9yaWdpbn0vP2NhbmNlbGVkPXRydWVgLFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gQ3JlYXRlIENoZWNrb3V0IFNlc3Npb25zIGZyb20gYm9keSBwYXJhbXMuXG4gICAgICAgICAgICBjb25zdCBzZXNzaW9uID0gYXdhaXQgc3RyaXBlLmNoZWNrb3V0LnNlc3Npb25zLmNyZWF0ZShwYXJhbXMpO1xuICAgICAgICAgICAgcmVzLnN0YXR1cygyMDApLmpzb24oc2Vzc2lvbik7XG4gICAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgcmVzLnN0YXR1cyhlcnIuc3RhdHVzQ29kZSB8fCA1MDApLmpzb24oZXJyLm1lc3NhZ2UpO1xuICAgICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcmVzLnNldEhlYWRlcignQWxsb3cnLCAnUE9TVCcpO1xuICAgICAgICByZXMuc3RhdHVzKDQwNSkuZW5kKCdNZXRob2QgTm90IEFsbG93ZWQnKTtcbiAgICB9XG59Il0sIm5hbWVzIjpbIlN0cmlwZSIsInN0cmlwZSIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19TVFJJUEVfU0VDUkVUX0tFWSIsImhhbmRsZXIiLCJyZXEiLCJyZXMiLCJtZXRob2QiLCJjb25zb2xlIiwibG9nIiwiYm9keSIsInBhcmFtcyIsInN1Ym1pdF90eXBlIiwibW9kZSIsInBheW1lbnRfbWV0aG9kX3R5cGVzIiwiYmlsbGluZ19hZGRyZXNzX2NvbGxlY3Rpb24iLCJzaGlwcGluZ19vcHRpb25zIiwic2hpcHBpbmdfcmF0ZSIsImxpbmVfaXRlbXMiLCJtYXAiLCJpdGVtIiwiaW1nIiwiaW1hZ2UiLCJhc3NldCIsIl9yZWYiLCJuZXdJbWFnZSIsInJlcGxhY2UiLCJwcmljZV9kYXRhIiwiY3VycmVuY3kiLCJwcm9kdWN0X2RhdGEiLCJuYW1lIiwiaW1hZ2VzIiwidW5pdF9hbW91bnQiLCJwcmljZSIsImFkanVzdGFibGVfcXVhbnRpdHkiLCJlbmFibGVkIiwibWluaW11bSIsIm1heGltdW0iLCJxdWFudGl0eSIsInN1Y2Nlc3NfdXJsIiwiaGVhZGVycyIsIm9yaWdpbiIsImNhbmNlbF91cmwiLCJzZXNzaW9uIiwiY2hlY2tvdXQiLCJzZXNzaW9ucyIsImNyZWF0ZSIsInN0YXR1cyIsImpzb24iLCJlcnIiLCJzdGF0dXNDb2RlIiwibWVzc2FnZSIsInNldEhlYWRlciIsImVuZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./pages/api/stripe.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/stripe.js"));
module.exports = __webpack_exports__;

})();